{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "clipboard",
  "type": "registry:block",
  "title": "Clipboard",
  "description": "A simple method to copy items to the clipboard",
  "registryDependencies": [
    "button",
    "tooltip"
  ],
  "files": [
    {
      "path": "registry/clipboard/clipboard.tsx",
      "content": "\"use client\";\nimport type React from \"react\";\nimport { useState } from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport { Button } from \"@/components/ui/button\";\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from \"@/components/ui/tooltip\";\nimport { Check, Copy } from \"lucide-react\";\n\nexport interface ClipboardProps {\n\ttextToCopy: string;\n\tchildren?: React.ReactNode;\n\tclassName?: string;\n\ticonSize?: number;\n\tcopiedDuration?: number;\n\ttooltipText?: string;\n\ttooltipCopiedText?: string;\n\tshowTooltip?: boolean;\n\tcopyIcon?: React.ReactNode;\n\tcheckIcon?: React.ReactNode;\n\tcheckIconClassName?: string;\n\tcopyIconClassName?: string;\n\tonCopy?: () => void;\n\tonError?: (error: Error) => void;\n\ttooltipDelayDuration?: number;\n\tdisabled?: boolean;\n}\n\nexport default function Clipboard({\n\ttextToCopy,\n\tchildren,\n\tclassName,\n\ticonSize = 16,\n\tcopiedDuration = 1500,\n\ttooltipText = \"Click to copy\",\n\ttooltipCopiedText = \"Copied!\",\n\tshowTooltip = true,\n\tcopyIcon,\n\tcheckIcon,\n\tcheckIconClassName,\n\tcopyIconClassName,\n\tonCopy,\n\tonError,\n\ttooltipDelayDuration = 0,\n\tdisabled = false,\n}: ClipboardProps) {\n\tconst [copied, setCopied] = useState<boolean>(false);\n\n\tconst handleCopy = async () => {\n\t\ttry {\n\t\t\tawait navigator.clipboard.writeText(textToCopy);\n\t\t\tsetCopied(true);\n\t\t\tonCopy?.();\n\t\t\tsetTimeout(() => setCopied(false), copiedDuration);\n\t\t} catch (err) {\n\t\t\tconst error = err instanceof Error ? err : new Error(\"Failed to copy text\");\n\t\t\tconsole.error(\"Failed to copy text: \", error);\n\t\t\tonError?.(error);\n\t\t}\n\t};\n\n\tconst defaultCopyIcon = copyIcon || <Copy size={iconSize} aria-hidden=\"true\" />;\n\tconst defaultCheckIcon = checkIcon || (\n\t\t<Check className={cn(checkIconClassName)} size={iconSize} aria-hidden=\"true\" />\n\t);\n\n\tconst triggerElement = children ? (\n\t\t<button\n\t\t\ttype=\"button\"\n\t\t\tonClick={disabled || copied ? undefined : handleCopy}\n\t\t\tclassName=\"cursor-pointer border-none bg-transparent p-0\"\n\t\t\tdisabled={disabled || copied}\n\t\t\taria-label={copied ? \"Copied\" : \"Copy to clipboard\"}\n\t\t>\n\t\t\t{children}\n\t\t</button>\n\t) : (\n\t\t<Button\n        \n\t\t\tclassName={cn(\"disabled:opacity-100\", className)}\n\t\t\tonClick={handleCopy}\n\t\t\taria-label={copied ? \"Copied\" : \"Copy to clipboard\"}\n\t\t\tdisabled={copied || disabled}\n\t\t>\n\t\t\t<div className={cn(\"transition-all\", copied ? \"scale-100 opacity-100\" : \"scale-0 opacity-0\")}>\n\t\t\t\t{defaultCheckIcon}\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclassName={cn(\n\t\t\t\t\t\"absolute transition-all\",\n\t\t\t\t\tcopied ? \"scale-0 opacity-0\" : \"scale-100 opacity-100\",\n\t\t\t\t\tcopyIconClassName\n\t\t\t\t)}\n\t\t\t>\n\t\t\t\t{defaultCopyIcon}\n\t\t\t</div>\n\t\t</Button>\n\t);\n\n\tif (!showTooltip) {\n\t\treturn triggerElement;\n\t}\n\n\treturn (\n\t\t<TooltipProvider delayDuration={tooltipDelayDuration}>\n\t\t\t<Tooltip>\n\t\t\t\t<TooltipTrigger asChild>{triggerElement}</TooltipTrigger>\n\t\t\t\t<TooltipContent className=\"px-2 py-1 text-xs\">{copied ? tooltipCopiedText : tooltipText}</TooltipContent>\n\t\t\t</Tooltip>\n\t\t</TooltipProvider>\n\t);\n}",
      "type": "registry:component"
    }
  ],
  "meta": {
    "author": "tommerty"
  },
  "categories": [
    "dashboard"
  ]
}